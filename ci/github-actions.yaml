name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # important so tags are available

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to private registry
        uses: docker/login-action@v3
        with:
          registry: your.registry.local:5000
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Bump Version
        run: ./scripts/bump-version.sh patch

      - name: Commit & Push New Version
        run: |
          VERSION=$(cat VERSION)
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add VERSION
          git commit -m "ci: bump version to $VERSION [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main || echo "No push performed"

      - name: Create Git Tag
        run: |
          VERSION=$(cat VERSION)
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

      - name: Get Version
        id: get_version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ðŸš€ Release v${{ steps.get_version.outputs.version }}
            - Built Jenkins custom image
            - Published to Docker registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Version Check
        run: ./scripts/version-check.sh

      - name: Build
        run: ./scripts/build.sh

      - name: Push
        run: ./scripts/push.sh
